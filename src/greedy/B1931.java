package greedy;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.*;public class B1931 {    static class Node {        int start;        int end;        Node(int start, int end) {            this.start = start;            this.end = end;        }    }    static int start, end;    public static void main(String[] args) throws IOException {        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st;        int N = Integer.parseInt(br.readLine());        List<Node> meets = new ArrayList<>();        for (int i = 0; i < N; i++) {            st = new StringTokenizer(br.readLine());            start = Integer.parseInt(st.nextToken());            end = Integer.parseInt(st.nextToken());            meets.add(new Node(start, end));        }        meets.sort(new Comparator<Node>() {            @Override            public int compare(Node o1, Node o2) {                if (o1.end == o2.end) {                    return o1.start - o2.start;                }                return o1.end - o2.end;            }        });        int answer = 0;        int time = 0;        for (int i = 0; i < N; i++) {            if (time > meets.get(i).start) {                continue;            }            answer++;            time = meets.get(i).end;        }        System.out.println(answer);    }}