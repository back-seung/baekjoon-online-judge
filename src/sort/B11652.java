package sort;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.HashMap;import java.util.Map;/*준규는 숫자 카드 N장을 가지고 있다.숫자 카드에는 정수가 하나 적혀있는데, 적혀있는 수는 -2^62보다 크거나 같고, 2^62보다 작거나 같다.준규가 가지고 있는 카드가 주어졌을 때, 가장 많이 가지고 있는 정수를 구하는 프로그램을 작성하시오.만약, 가장 많이 가지고 있는 정수가 여러 가지라면, *작은 것을 출력한다.입력첫째 줄에 준규가 가지고 있는 숫자 카드의 개수 N (1 ≤ N ≤ 100,000)이 주어진다.둘째 줄부터 N개 줄에는 숫자 카드에 적혀있는 정수가 주어진다.*/public class B11652 {    public static void main(String[] args) throws IOException {        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        int N = Integer.parseInt(br.readLine());        Map<Long, Long> countMap = new HashMap<>();        long maxCount = 0;        long maxValue = 0;        for (int i = 0; i < N; i++) {            long number = Long.parseLong(br.readLine());            countMap.put(number, countMap.getOrDefault(number, 0L) + 1);            if (maxCount < countMap.get(number)) {                maxCount = countMap.get(number);                maxValue = number;            } else if (maxCount == countMap.get(number)) {                maxValue = Math.min(maxValue, number);            }        }        System.out.println(maxValue);    }}