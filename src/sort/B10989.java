package sort;import java.io.*;public class B10989 {    public static void main(String[] args) throws IOException {        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        int N = Integer.parseInt(br.readLine());        int[] arr = new int[N];        for (int i = 0; i < N; i++) {            arr[i] = Integer.parseInt(br.readLine());        }        sort(arr, 0, arr.length - 1);        for (int i : arr) {            System.out.println(i);        }    }    static void sort(int[] arr, int left, int right) {        if (left >= right) return;        int mid = partition(arr, left, right);        sort(arr, left, mid - 1);        sort(arr, mid, right);    }    // middle 값 계산    static int partition(int[] arr, int left, int right) {        int pivot = arr[(left + right) / 2];        while (left <= right) {            while (arr[left] < pivot) left++;            while (arr[right] > pivot) right--;            if (left <= right) {                swap(arr, left, right);                left++;                right--;            }        }        return left;    }    static void swap(int[] arr, int i, int j) {        int temp = arr[i];        arr[i] = arr[j];        arr[j] = temp;    }    static void countSort(int[] arr) {    }}