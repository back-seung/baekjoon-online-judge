package exhaustive_search;import java.util.*;public class Carpet {    public int[] solution(int brown, int yellow) {        int[] answer = new int[2];        List<Integer> list = new ArrayList<>();        List<int[]> size = new ArrayList<>();        int sum = brown + yellow;        for (int i = 1; i <= sum; i++) {            if (sum % i == 0) list.add(i);            if (i * i == sum) list.add(i);        }        int start = 0;        int end = list.size() - 1;        while ((end - start) >= 1) {            size.add(new int[]{list.get(end), list.get(start)});            start++;            end--;        }        for (int i = 0; i < size.size(); i++) {            int h = (Math.abs(size.get(i)[0])) * 2;            int w = (Math.abs(size.get(i)[1]) - 2) * 2;            if (h + w == brown) return new int[]{size.get(i)[0], size.get(i)[1]};        }        return answer;    }}