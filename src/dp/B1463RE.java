package dp;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;public class B1463RE {    public static void main(String[] args) throws IOException {        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        int X = Integer.parseInt(br.readLine());        /*        1. 테이블 정의하기            D[i] = i를 1로 만들기 위해 필요한 연산 사용 횟수의 최솟값        2. 점화식            D[12] = ?            2-1. 3으로 나누거나 12/3 == 4 (D[12] = D[4] + 1)            2-2. 2로  나누거나 12/2 == 6 (D[12] = D[6] + 1)            2-3. 1을 빼거나   12-1 == 11 (D[12] = D[11] + 1)            -> D[12] = Math.min(D[4] + 1, Math.min(D[6] + 1, D[11] + 1))            D[K] = Math.min(D[K/3] + 1, Math.min(D[K/2] + 1, D[K-1] + 1))        3. 초기값 정의하기            D[1] = 0;        */        int[] arr = new int[X + 1];        arr[1] = 0;        for (int i = 2; i <= X; i++) {            arr[i] = arr[i - 1] + 1;            if (i % 2 == 0) arr[i] = Math.min(arr[i], arr[i / 2] + 1);            if (i % 3 == 0) arr[i] = Math.min(arr[i], arr[i / 3] + 1);        }        System.out.println(arr[X]);    }}