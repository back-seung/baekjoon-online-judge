package dp;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;public class B9095RE {    /*        1. 테이블 정의            D[N] = N을 1,2,3의 합으로 나타내는 방법의 수        2. 점화식            D[1] = {1} -> 1개            D[2] = {1,1}, {2} -> 2개            D[3] = {1,1,1}, {1,2}, {2,1}, {3} -> 4개            D[4] = {1,3},                   {1,1,2}, {2,2},                   {1,1,1,1}, {1,2,1}, {2,1,1}, {3,1} -> 7개            D[N] = D[N - 1] + D[N - 2] + D[N - 3] ?        3. 초기값 = 2. 점화식의 D[1] ~ D[3]    */    static int N; // 1 <= N <= 10    static int[] D = new int[11];    public static void main(String[] args) throws IOException {        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        int T = Integer.parseInt(br.readLine());        D[1] = 1;        D[2] = 2;        D[3] = 4;        for (int j = 4; j <= 10; j++) {            D[j] = D[j - 1] + D[j - 2] + D[j - 3];        }        for (int i = 0; i < T; i++) {            N = Integer.parseInt(br.readLine());            System.out.println(D[N]);        }    }}