package dp;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;public class B9461_KNOU {    /*    P(N) = 나선에 있는 정삼각형의 변의 길이    2. 점화식        D[N] = D[N-3] + D[N-2];    3. 최초값        D[0] = D[1] = D[2] = 1;    */    static int N;    static long[] D = new long[101];    public static void main(String[] args) throws IOException {        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        D[1] = 1;        D[2] = 1;        D[3] = 1;        for (int i = 4; i < 101; i++) {            D[i] = D[i - 3] + D[i - 2];        }        int T = Integer.parseInt(br.readLine());        for (int i = 0; i < T; i++) {            N = Integer.parseInt(br.readLine());            System.out.println(D[N]);        }    }}